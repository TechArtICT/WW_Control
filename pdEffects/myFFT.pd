#N canvas 766 147 943 785 12;
#X obj 54 483 *~;
#X obj 21 483 *~;
#X obj 21 505 -~;
#X obj 170 481 *~;
#X obj 139 481 *~;
#X obj 139 503 +~;
#X obj 112 199 *~;
#X obj 81 199 *~;
#X obj 53 199 *~;
#X obj 22 199 *~;
#X obj 22 224 +~;
#X obj 126 391 *~;
#X obj 22 628 *~;
#X obj 237 436 rfft~;
#X obj 121 167 rfft~;
#X obj 21 570 rifft~;
#X obj 23 682 outlet~;
#X obj 96 391 *~;
#X obj 96 413 +~;
#X obj 127 224 -~;
#X obj 21 437 *~;
#X obj 54 438 *~;
#X obj 83 632 r window-size;
#X obj 336 593 r window-size;
#X obj 336 642 block~;
#X obj 22 355 +~ 1e-15;
#X obj 21 604 *~;
#X obj 83 654 expr 2/(3*$f1);
#X obj 529 569 loadbang;
#X msg 336 617 set \$1 4;
#N canvas 826 109 1035 818 read-windows 0;
#X obj 139 632 *~;
#X obj 462 383 r window-size;
#X obj 269 247 f;
#X obj 193 16 r window-size;
#X obj 193 64 /;
#X obj 318 634 *~;
#X obj 269 196 bang~;
#X obj 139 496 line~;
#X obj 193 89 * 1000;
#X obj 311 249 +;
#X obj 391 214 *;
#X obj 287 306 / 1000;
#X text 301 333 reading location (samples);
#X obj 158 539 / 4;
#X obj 391 184 * 0.01;
#X floatatom 462 440 7 0 0 0 - - - 0;
#X obj 462 416 *;
#X obj 582 313 * 0.01;
#X obj 582 337 + 69;
#X obj 582 362 mtof;
#X obj 582 389 / 440;
#X obj 497 416 t b f;
#X obj 139 658 outlet~;
#X obj 318 659 outlet~;
#X text 520 438 stretched window size (samples), f 16;
#X obj 287 282 r \$0-insamprate;
#X floatatom 192 111 5 0 0 0 - - - 0;
#X obj 193 40 t f b;
#X obj 225 64 samplerate~;
#X obj 192 136 / 4;
#X obj 346 253 s see-loc;
#X obj 306 359 / 2;
#X obj 268 357 -;
#X text 342 356 back up 1/2 window;
#X obj 139 562 -~;
#X text 330 17 Read two windows out of the recorded sample \, one 1/4 ahead of the other. The mid point of the front window is specified by "location". If "speed" is nonzero \, "location" automatically precesses., f 45;
#X obj 514 641 * -0.5;
#X text 17 547 "back" window 1/4 cycle behind "front" one, f 16;
#X text 223 136 computation period (msec) for overlap of 4;
#X text 245 110 msec in a window;
#X obj 514 587 /;
#X obj 514 615 * 1000;
#X obj 514 563 t f b;
#X obj 546 587 samplerate~;
#X obj 514 540 f;
#X text 798 587 misc controls;
#X obj 139 414 f;
#X obj 139 380 b;
#X msg 139 468 0 \, \$1 \$2;
#X text 543 512 "rewind" control takes us to a location depending on stretched window size., f 25;
#X text 427 207 loop to precess the location according to the "speed" parameter., f 22;
#X obj 139 441 pack f f;
#X obj 269 333 * 48;
#X obj 139 596 tabread4~ sample;
#X obj 317 576 tabread4~ sample;
#X obj 336 603 tabreceive~ hann;
#X obj 287 221 r \$0-location;
#X obj 574 676 int \$0;
#X msg 518 773 \; \$2-location \$1;
#X obj 514 671 t f b;
#X obj 518 748 pack f f;
#X obj 514 487 r \$0-rewind;
#X obj 911 669 int \$0;
#X obj 882 641 t f b;
#X obj 880 699 pack f f;
#X msg 883 734 \; \$2-rewind bang \; \$2-speed \$1;
#X obj 391 161 r \$0-speed;
#X obj 883 618 inlet;
#X obj 582 289 inlet;
#X msg 628 290 0;
#X obj 629 262 loadbang;
#X obj 516 709 +;
#X obj 656 619 inlet;
#X obj 707 634 samplerate~;
#X obj 709 608 loadbang;
#X obj 731 579 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 662 675 *;
#X obj 248 408 % 480000;
#X floatatom 329 411 15 0 0 0 - - - 0;
#X connect 0 0 22 0;
#X connect 1 0 16 0;
#X connect 2 0 9 0;
#X connect 2 0 52 0;
#X connect 3 0 27 0;
#X connect 4 0 8 0;
#X connect 5 0 23 0;
#X connect 6 0 2 0;
#X connect 7 0 34 0;
#X connect 7 0 54 0;
#X connect 8 0 26 0;
#X connect 9 0 2 1;
#X connect 9 0 30 0;
#X connect 10 0 9 1;
#X connect 13 0 34 1;
#X connect 14 0 10 0;
#X connect 15 0 13 0;
#X connect 15 0 31 0;
#X connect 15 0 44 1;
#X connect 15 0 46 1;
#X connect 16 0 15 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 16 0;
#X connect 21 1 16 1;
#X connect 25 0 11 0;
#X connect 26 0 29 0;
#X connect 27 0 4 0;
#X connect 27 1 28 0;
#X connect 28 0 4 1;
#X connect 29 0 10 1;
#X connect 29 0 51 1;
#X connect 31 0 32 1;
#X connect 32 0 77 0;
#X connect 34 0 53 0;
#X connect 36 0 59 0;
#X connect 40 0 41 0;
#X connect 41 0 36 0;
#X connect 42 0 40 0;
#X connect 42 1 43 0;
#X connect 43 0 40 1;
#X connect 44 0 42 0;
#X connect 46 0 51 0;
#X connect 47 0 46 0;
#X connect 48 0 7 0;
#X connect 51 0 48 0;
#X connect 52 0 32 0;
#X connect 53 0 0 0;
#X connect 54 0 5 0;
#X connect 55 0 5 1;
#X connect 55 0 0 1;
#X connect 56 0 2 1;
#X connect 57 0 60 1;
#X connect 59 0 71 0;
#X connect 59 1 57 0;
#X connect 60 0 58 0;
#X connect 61 0 44 0;
#X connect 62 0 64 1;
#X connect 63 0 64 0;
#X connect 63 1 62 0;
#X connect 64 0 65 0;
#X connect 66 0 14 0;
#X connect 67 0 63 0;
#X connect 68 0 17 0;
#X connect 69 0 17 0;
#X connect 70 0 69 0;
#X connect 71 0 60 0;
#X connect 72 0 76 0;
#X connect 73 0 76 1;
#X connect 74 0 73 0;
#X connect 75 0 73 0;
#X connect 76 0 71 1;
#X connect 77 0 53 1;
#X connect 77 0 54 1;
#X connect 77 0 47 0;
#X connect 77 0 78 0;
#X restore 179 164 pd read-windows;
#X text 250 21 recall previous output amplitude. Its phase will be added to the phase difference we measure from two windows in the the recorded sound., f 66;
#X obj 124 75 *~;
#X obj 97 75 *~;
#X obj 97 97 +~;
#X obj 162 77 +~ 1e-20;
#X obj 81 125 *~;
#X obj 22 124 *~;
#X obj 180 299 r lock;
#X obj 32 251 lrshift~ 1;
#X obj 27 275 lrshift~ -1;
#X obj 144 251 lrshift~ 1;
#X obj 136 275 lrshift~ -1;
#X obj 40 306 *~;
#X obj 162 326 *~;
#X obj 22 331 +~;
#X obj 128 326 +~;
#X text 250 173 Take FT of the window in back. Multiply its conjugate by the normalized previous output. The result has the magnitude of the input sound and phase (previous output phase) minus (back window phase)., f 66;
#X text 250 369 Normalize again \, this time taking care to salt each channel with 1e-15 so that we get a unit complex number even if everything was zero heretofore., f 66;
#X text 285 431 Now take the FT of the forward window and multiply it by the unit complex number from above. The magnitude will be that of the forward window and the phase will be the previous output phase plus the phase difference between the two analysis windows -- except that if "lock" is on \, they will be modified to agree progressively better with the inter-channel phase relationships of the input., f 61;
#X text 250 245 If "lock" is on \, encourage neighboring channels to stay in phase by adding the two neighboring complex amplitudes. The result will tend toward the channel with the strongest amplitude. If the phase relationships between channels in the output and those in the input are in parallel \, then neighboring channels of the quotient will all have the same phase and this will not change any phases. (lrshift shifts the signal to the left or right depending on its argument.), f 66;
#X text 250 130 Read two windows \, one 1/4 length behind the other \, of the input sound \, with Hann window function (see inside)., f 66;
#X text 307 556 'set' message to block allows variable size, f 22;
#X obj 162 100 rsqrt~;
#X text 250 72 divide by the magnitude to make a unit-magnitude complex amplitude (phase only). The 1e-20 is to prevent overflows. [rsqrt~] is reciprocal square root., f 66;
#X obj 96 437 rsqrt~;
#X obj 61 603 tabreceive~ hann;
#X obj 540 614 int \$0;
#X obj 599 571 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 23 12 receive~ \$0-prev-real;
#X obj 81 35 receive~ \$0-prev-imag;
#X obj 139 538 send~ \$0-prev-imag;
#X obj 139 568 send~ \$0-prev-real;
#X obj 275 114 inlet;
#X obj 136 136 inlet;
#X msg 527 650 \; window-size 2048 \; \$1-rewind bang;
#X obj 220 134 inlet;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 0 62 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 15 1;
#X connect 5 0 61 0;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 40 0;
#X connect 10 0 39 0;
#X connect 10 0 45 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 26 0;
#X connect 17 0 18 0;
#X connect 18 0 55 0;
#X connect 19 0 41 0;
#X connect 19 0 42 0;
#X connect 19 0 46 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 22 0 27 0;
#X connect 23 0 29 0;
#X connect 25 0 17 1;
#X connect 25 0 17 0;
#X connect 25 0 20 0;
#X connect 26 0 12 0;
#X connect 27 0 12 1;
#X connect 28 0 57 0;
#X connect 29 0 24 0;
#X connect 30 0 14 0;
#X connect 30 1 13 0;
#X connect 32 0 34 1;
#X connect 33 0 34 0;
#X connect 34 0 35 0;
#X connect 35 0 53 0;
#X connect 36 0 8 0;
#X connect 36 0 7 0;
#X connect 37 0 9 0;
#X connect 37 0 6 0;
#X connect 38 0 43 1;
#X connect 38 0 44 1;
#X connect 39 0 43 0;
#X connect 40 0 43 0;
#X connect 41 0 44 0;
#X connect 42 0 44 0;
#X connect 43 0 45 1;
#X connect 44 0 46 1;
#X connect 45 0 25 0;
#X connect 46 0 11 0;
#X connect 46 0 11 1;
#X connect 46 0 21 0;
#X connect 53 0 36 1;
#X connect 53 0 37 1;
#X connect 55 0 20 1;
#X connect 55 0 21 1;
#X connect 56 0 26 1;
#X connect 57 0 65 0;
#X connect 58 0 57 0;
#X connect 59 0 33 1;
#X connect 59 0 33 0;
#X connect 59 0 37 0;
#X connect 60 0 32 1;
#X connect 60 0 32 0;
#X connect 60 0 36 0;
#X connect 63 0 30 2;
#X connect 64 0 30 0;
#X connect 66 0 30 1;
